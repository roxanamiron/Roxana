@model ToDoListBox.UI.Models.CategoryToDoList.CategoryToDoListUIModel

@{
    ViewBag.Title = "Create Category";
}

<h2>Create</h2>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            font-family: Arial;
        }

        /* Style the tab */
        .tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
        }
            /* Style the buttons inside the tab */
            .tab button {
                background-color: inherit;
                float: left;
                border: none;
                outline: none;
                cursor: pointer;
                padding: 14px 16px;
                transition: 0.3s;
                font-size: 17px;
            }

                /* Change background color of buttons on hover */
                .tab button:hover {
                    background-color: #ddd;
                }

                /* Create an active/current tablink class */
                .tab button.active {
                    background-color: #ccc;
                }

        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 6px 12px;
            border: 1px solid #ccc;
            border-top: none;
        }
    </style>
</head>
<body>

    <p>Click on the buttons inside the tabbed menu:</p>

    <div class="tab">
        <button class="tablinks" onclick="openTask(event, 'Personal')">Personal</button>
        <button class="tablinks" onclick="openTask(event, 'Work')">Work</button>
        <button class="tablinks" onclick="openTask(event, 'Shoping')">Shoping</button>
    </div>

    <div id="Personal" class="tabcontent">
        <h3>Personal</h3>
        <p>Personal is the most important categorytask.</p>
    </div>

    <div id="Work" class="tabcontent">
        <h3>Work</h3>
        <p>Work is the second important categorytask.</p>
    </div>

    <div id="Shoping" class="tabcontent">
        <h3>Shoping</h3>
        <p>Shoping is time to spend some money :).</p>
    </div>

    <script>
        function openTask(evt, taskName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(taskName).style.display = "block";
            evt.currentTarget.className += " active";
        }
    </script>

</body>
</html>



<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            margin: 0;
            min-width: 250px;
        }


        /* Remove margins and padding from the list */
        ul {
            margin: 0;
            padding: 0;
        }

            /* Style the list items */
            ul li {
                cursor: pointer;
                position: relative;
                padding: 12px 8px 12px 40px;
                list-style-type: none;
                background: #eee;
                font-size: 18px;
                transition: 0.2s;
                /* make the list items unselectable */
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }


                /* Set all odd list items to a different color (zebra-stripes) */
                ul li:nth-child(odd) {
                    background: #f9f9f9;
                }

                /* Darker background-color on hover */
                ul li:hover {
                    background: #ddd;
                }
                /* When clicked on, add a background color and strike out text */
                ul li.checked {
                    background: #888;
                    color: #fff;
                    text-decoration: line-through;
                }

                    /* Add a "checked" mark when clicked on */
                    ul li.checked::before {
                        content: '';
                        position: absolute;
                        border-color: #fff;
                        border-style: solid;
                        border-width: 0 2px 2px 0;
                        top: 10px;
                        left: 16px;
                        transform: rotate(45deg);
                        height: 15px;
                        width: 7px;
                    }
        /* Style the close button */
        .close {
            position: absolute;
            right: 0;
            top: 0;
            padding: 12px 16px 12px 16px;
        }


            .close:hover {
                background-color: #f44336;
                color: white;
            }

        /* Style the header */
        .header {
            background-color: #f44336;
            padding: 30px 40px;
            color: white;
            text-align: center;
        }

            /* Clear floats after the header */
            .header:after {
                content: "";
                display: table;
                clear: both;
            }

        /* Style the input */
        input {
            border: none;
            width: 75%;
            padding: 10px;
            float: left;
            font-size: 16px;
        }

        /* Style the "Add" button */
        .addBtn {
            padding: 10px;
            width: 25%;
            background: #d9d9d9;
            color: #555;
            float: left;
            text-align: center;
            font-size: 16px;
            cursor: pointer;
            transition: 0.3s;
        }

            .addBtn:hover {
                background-color: #bbb;
            }
    </style>
</head>
<body>

    <div id="myDIV" class="header">
        <h2 style="margin:5px">My To Do List</h2>
        <input type="text" id="myInput" placeholder="Title...">
        <span onclick="newElement()" class="addBtn">Add</span>
    </div>

    <script>
        // Create a "close" button and append it to each list item
        var myNodelist = document.getElementsByTagName("LI");
        var i;
        for (i = 0; i < myNodelist.length; i++) {
            var span = document.createElement("SPAN");
            var txt = document.createTextNode("\u00D7");
            span.className = "close";
            span.appendChild(txt);
            myNodelist[i].appendChild(span);
        }

        // Click on a close button to hide the current list item
        var close = document.getElementsByClassName("close");
        var i;
        for (i = 0; i < close.length; i++) {
            close[i].onclick = function () {
                var div = this.parentElement;
                div.style.display = "none";
            }
        }

        // Add a "checked" symbol when clicking on a list item
        var list = document.querySelector('ul');
        list.addEventListener('click', function (ev) {
            if (ev.target.tagName === 'LI') {
                ev.target.classList.toggle('checked');
            }
        }, false);

        // Create a new list item when clicking on the "Add" button
        function newElement() {
            var li = document.createElement("li");
            var inputValue = document.getElementById("myInput").value;
            var t = document.createTextNode(inputValue);
            li.appendChild(t);
            if (inputValue === '') {
                alert("You must write something!");
            } else {
                document.getElementById("myUL").appendChild(li);
            }
            document.getElementById("myInput").value = "";

            var span = document.createElement("SPAN");
            var txt = document.createTextNode("\u00D7");
            span.className = "close";
            span.appendChild(txt);
            li.appendChild(span);

            for (i = 0; i < close.length; i++) {
                close[i].onclick = function () {
                    var div = this.parentElement;
                    div.style.display = "none";
                }
            }
        }

    </script>

</body>
</html>


